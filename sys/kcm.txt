# Copyright 2016 syzkaller project authors. All rights reserved.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.

include <linux/net.h>
include <linux/kcm.h>
include <linux/sockios.h>

socket$kcm(domain const[AF_KCM], type flags[kcm_socket_type], proto const[KCMPROTO_CONNECTED]) fd[kcm]
setsockopt$KCM_RECV_DISABLE(fd fd[kcm], level const[SOL_KCM], opt const[KCM_RECV_DISABLE], val ptr[in, int32], len len[val])
getsockopt$KCM_RECV_DISABLE(fd fd[kcm], level const[SOL_KCM], opt const[KCM_RECV_DISABLE], val ptr[out, int32], len len[val])
sendmsg$kcm(fd fd[kcm], msg ptr[in, send_msghdr], f flags[send_flags])
recvmsg$kcm(fd fd[kcm], msg ptr[in, recv_msghdr], f flags[recv_flags])

ioctl$SIOCKCMATTACH(fd fd[kcm], cmd const[SIOCKCMATTACH], arg ptr[in, kcm_attach])
ioctl$SIOCKCMUNATTACH(fd fd[kcm], cmd const[SIOCKCMUNATTACH], arg ptr[in, kcm_unattach])
ioctl$SIOCKCMCLONE(fd fd[kcm], cmd const[SIOCKCMCLONE], arg ptr[inout, kcm_clone])

kcm_socket_type = SOCK_DGRAM, SOCK_SEQPACKET

kcm_attach {
	fd	fd[sock]
	bpf_fd	int32
}

kcm_unattach {
	fd	fd[sock]
}

kcm_clone {
	fd	fd[sock]
}
